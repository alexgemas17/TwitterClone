{"version":3,"sources":["firebase/config.js","helpers/UploadTweetToDB.js","types.js","helpers/DBListeners.js","actions/tweet.js","actions/auth.js","routers/PublicRouter.js","routers/PrivateRouter.js","components/Navbar/LogoComponent.js","components/Login/LoginComponent.js","components/Explorer/ExplorerComponent.js","components/Navbar/InfoUserComponent.js","components/Navbar/MenuComponent.js","components/Navbar/NavbarComponent.js","components/Tweets/WriteTweetsComponent.js","components/Timeline/HeaderTimelineComponent.js","components/Timeline/TimelineListItem.js","components/Timeline/TimelineList.js","components/Timeline/TimelineComponent.js","components/User/HeaderUser.js","components/User/TweetsList.js","components/User/ButtonFollower.js","components/User/UserComponent.js","components/TwitterAppRouter.js","components/TwitterApp.js","routers/ContainerRouter.js","routers/AppRouter.js","reducers/authReducer.js","reducers/tweetReducer.js","store/store.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","database","googleAuthProvider","auth","GoogleAuthProvider","githubAuthProvider","GithubAuthProvider","UploadTweetToDB","userUID","newTweet","a","refTweet","ref","push","currentUser","child","key","set","once","list","forEach","follower","types","GetTimeline","userID","dispatch","on","snapshot","tweetID","tweetData","exists","tweet","val","tweetUID","userName","userDisplayName","photoUserURL","photoURL","textBody","type","payload","login","uid","displayName","logout","PublicRouter","isAuthenticated","Component","component","rest","props","to","prototype","PropTypes","bool","isRequired","func","PrivateRouter","LogoComponent","className","LoginComponent","useDispatch","role","alt","name","onClick","signInWithPopup","then","user","email","split","collection","doc","get","dataUser","newUser","likes","tweets","description","src","ExplorerComponent","history","useHistory","useState","valueSearch","setValueSearch","onSubmit","e","preventDefault","placeholder","value","onChange","target","InfoUserComponent","UserData","useSelector","state","authReducer","PhotoURL","DisplayName","UserName","MenuComponent","activeItemMenu","color","exact","activeStyle","signOut","NavbarComponent","console","log","handleInput","WriteTweetsComponent","valueTextArea","setValueTextArea","UID","NewTweet","time","Date","getTime","HeaderTimelineComponent","TimelineListItem","TimelineList","timeline","tweetReducer","map","TimelineComponent","HeaderUser","lenth","goBack","Likes","TweetsList","UserDataUID","CollectionFromDB","isLoading","tweetlist","setTweetlist","useEffect","arrTweets","GetTweetlistFromUser","ButtonFollower","styleBtn","handleInputFollow","UserComponent","setUser","setIsLoading","useLocation","pathname","orderByChild","equalTo","data","userData","UserUID","Tweets","Description","userFollowID","followingUser","FollowUser","undefined","TwitterAppRouter","path","TwitterApp","ContainerRouter","isLoggedIn","AppRouter","checkingDBLogin","setCheckingDBLogin","setIsLoggedIn","onAuthStateChanged","initialState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","find","length","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4731d8b2.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\nimport 'firebase/database'\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCYDK5HWgZiMGe_UOk5H6QiBK88TJ8X2Ss\",\r\n    authDomain: \"twitter-clone-3407a.firebaseapp.com\",\r\n    databaseURL: \"https://twitter-clone-3407a.firebaseio.com\",\r\n    projectId: \"twitter-clone-3407a\",\r\n    storageBucket: \"twitter-clone-3407a.appspot.com\",\r\n    messagingSenderId: \"459828175983\",\r\n    appId: \"1:459828175983:web:26f2517cdb4b7037f6999a\",\r\n    measurementId: \"G-S72ZFP5TSL\"\r\n  };\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n// Referencia a la base de datos\r\nconst db = firebase.firestore()\r\nconst database = firebase.database()\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider()\r\nconst githubAuthProvider = new firebase.auth.GithubAuthProvider()\r\n\r\nexport {\r\n    db, \r\n    database,\r\n    googleAuthProvider,\r\n    githubAuthProvider,\r\n    firebase\r\n}","\r\nimport { database } from \"../firebase/config\"\r\n\r\nexport const UploadTweetToDB = async ( userUID, newTweet ) => {\r\n    //const time = newTweet.time;\r\n    const refTweet = database.ref('tweets').push(newTweet)\r\n    \r\n    //{ tweetID: refTweet.key, type: 'Tweet', time: time}\r\n    let currentUser =  database.ref('users').child(userUID)\r\n    currentUser.child(\"Tweets\").child(refTweet.key).set(true)\r\n    currentUser.child(\"Timeline\").child(refTweet.key).set(true)\r\n\r\n    currentUser.child(\"Followers\")\r\n    .once(\"value\", (list) => {\r\n        list.forEach((follower) => {\r\n          var childRef = database.ref('users').child(follower.key);\r\n          childRef.child(\"Timeline\").child(refTweet.key).set(true);\r\n        });\r\n    });\r\n\r\n    return true;\r\n}\r\n\r\nexport const DeleteTweetFromDB = () => {\r\n\r\n}\r\n\r\nexport const GetTweetlistFromUser = ( userUID, CollectionFromDB, setTweetlist ) => {\r\n  let currentUser =  database.ref('users').child(userUID)\r\n  \r\n  currentUser.child(CollectionFromDB).once(\"value\", (list) => {\r\n    var arrTweets = []\r\n    \r\n    list.forEach((collection) => {\r\n      database.ref('tweets').child(collection.key)\r\n      .on(\"value\", function(tweetData) {\r\n        arrTweets.push(tweetData.val())\r\n      });\r\n    });\r\n    setTweetlist({tweets: arrTweets, isLoading:false})\r\n  });\r\n\r\n}","\r\nexport const types = {\r\n    login: '[Auth] login',\r\n    logout: '[Auth] logout',\r\n\r\n    createTweet: '[Tweets] New tweet',\r\n    addTweet: '[Tweets] Add new',\r\n    addTweetsToTimeline: '[Tweets] Add tweets to timeline', \r\n\r\n    loadTimeline: '[Timeline] Loading timeline',\r\n    cleanTimeline: '[Timeline] clean timeline data'\r\n}","import { addTweet } from \"../actions/tweet\";\r\nimport { database } from \"../firebase/config\"\r\n\r\n// Listener que está escuchando la timeline y recibe los child añadidos.\r\nexport const GetTimeline = ( userID, dispatch ) => {\r\n\r\n    var collectionFromDB = database.ref('users').child(userID).child('Timeline');\r\n    \r\n    collectionFromDB.on(\"child_added\", function(snapshot) {\r\n        var tweetID = snapshot.key\r\n        var tweetRef = database.ref('tweets').child(tweetID);\r\n\r\n        tweetRef.on(\"value\", function(tweetData) {\r\n            if(tweetData.exists){\r\n                const tweet = tweetData.val()\r\n                dispatch( addTweet(tweetData.key, tweet.userName, tweet.userDisplayName, tweet.photoUserURL, tweet.photoURL, tweet.textBody) )\r\n            }\r\n        });\r\n    });\r\n\r\n    // Eliminados\r\n}\r\n\r\nexport const FollowUser = ( userUID, userFollowID ) => {\r\n    let currentUser =  database.ref('users').child(userUID)\r\n    let followingUser =  database.ref('users').child(userFollowID)\r\n\r\n    followingUser.child(\"Followers\").child(userUID).set(true)\r\n    currentUser.child(\"Following\").child(userFollowID).set(true)\r\n\r\n    followingUser.child(\"Tweets\")\r\n    .once(\"value\", (list) => {\r\n        list.forEach((tweets) => {\r\n          currentUser.child(\"Timeline\").child(tweets.key).set(true);\r\n        });\r\n    });\r\n}\r\n\r\nexport const Unfollow = ( userUID, userUnfollowID ) => {\r\n    let currentUser =  database.ref('users').child(userUID)\r\n    let followingUser =  database.ref('users').child(userUnfollowID)\r\n\r\n    followingUser.child(\"Followers\").remove(userUID)\r\n    currentUser.child(\"Following\").remove(userUnfollowID).set(true)\r\n\r\n    followingUser.child(\"Tweets\")\r\n    .once(\"value\", (list) => {\r\n        list.forEach((tweets) => {\r\n          currentUser.child(\"Timeline\").remove(tweets.key).set(true);\r\n        });\r\n    });\r\n}","import { UploadTweetToDB } from \"../helpers/UploadTweetToDB\"\r\nimport { types } from \"../types\"\r\n\r\nexport const CreateNewTweet = (uid, userName, userDisplayName, photoUserURL, photoURL, textBody) => {\r\n    return async () => {\r\n\r\n        const NewTweet = {\r\n            userUID: uid,\r\n            userName: userName,\r\n            userDisplayName: userDisplayName,\r\n            photoUserURL: photoUserURL,\r\n            photoURL: photoURL,\r\n            textBody: textBody,\r\n            time: new Date().getTime()\r\n        }\r\n\r\n        if( UploadTweetToDB(uid, NewTweet) ){\r\n            // Se subio correctamente\r\n        }\r\n    }\r\n}\r\n\r\nexport const addTweet = (tweetUID, userName, userDisplayName, photoUserURL, photoURL, textBody) => {\r\n    return {\r\n        type: types.addTweet,\r\n        payload: {\r\n            tweetUID: tweetUID,\r\n            userName: userName,\r\n            userDisplayName: userDisplayName,\r\n            photoUserURL: photoUserURL,\r\n            photoURL: photoURL,\r\n            textBody: textBody\r\n        }\r\n    }\r\n}\r\n\r\nexport const AddTweetsToTimeline = ( tweets ) => {\r\n    return {\r\n        type: types.addTweetsToTimeline,\r\n        payload: tweets\r\n    }\r\n}\r\n\r\nexport const LoadTimeline = (timeline) => {\r\n    return {\r\n        type: types.loadTimeline,\r\n        payload: timeline\r\n    }\r\n}\r\n\r\nexport const cleanTimeline = () => {\r\n    return {\r\n        type: types.cleanTimeline\r\n    }\r\n}","import {database, db, firebase, githubAuthProvider, googleAuthProvider}  from '../firebase/config'\r\nimport { GetTimeline } from '../helpers/DBListeners'\r\nimport { types } from '../types'\r\nimport { cleanTimeline } from './tweet'\r\n\r\nexport const StartLoginWithGithub = () => {\r\n    return (dispatch) => {\r\n        \r\n        firebase.auth().signInWithPopup( githubAuthProvider )\r\n        .then( ({user}) => {\r\n            const userName = user.email.split('@')[0]\r\n\r\n            db.collection('users').doc(user.uid).get()\r\n            .then(dataUser => {\r\n                if(!dataUser.exists) {\r\n                    \r\n                    const newUser = {\r\n                        displayName: user.displayName,\r\n                        userName: userName,\r\n                        photoURL: user.photoURL,\r\n                        email: user.email,\r\n                        likes: 0,\r\n                        tweets: 0,\r\n                        description: '¡Cambia la descripción en \"Editar perfil\" para poner la descripción que quieras!'\r\n                    }\r\n                    database.ref('users/' + user.uid).set(newUser)\r\n\r\n                    let currentUser =  database.ref('users').child(user.uid)\r\n                    currentUser.child(\"Following\").child('QL1PvcozkkUDgXeeYWlMydbLbpN2').set(true)\r\n                }\r\n            })\r\n            dispatch(login( user.uid, userName, user.displayName, user.photoURL ))\r\n            \r\n            GetTimeline( user.uid, dispatch)\r\n        })\r\n    }\r\n}\r\n\r\nexport const StartLoginWithGoogle = () => {\r\n    return (dispatch) => {\r\n        firebase.auth().signInWithPopup( googleAuthProvider )\r\n        .then( ({user}) => {\r\n            const userName = user.email.split('@')[0]\r\n\r\n            db.collection('users').doc(user.uid).get()\r\n            .then(dataUser => {\r\n                if(!dataUser.exists) {\r\n                    \r\n                    const newUser = {\r\n                        displayName: user.displayName,\r\n                        userName: userName,\r\n                        photoURL: user.photoURL,\r\n                        email: user.email,\r\n                        likes: 0,\r\n                        tweets: 0,\r\n                        description: '¡Cambia la descripción en \"Editar perfil\" para poner la descripción que quieras!'\r\n                    }\r\n                    database.ref('users/' + user.uid).set(newUser)\r\n                }\r\n            })\r\n            dispatch(login( user.uid, userName, user.displayName, user.photoURL ))\r\n            // currentUser.child(\"Following\").child('QL1PvcozkkUDgXeeYWlMydbLbpN2').set(true)\r\n        })\r\n    }\r\n}\r\n\r\nexport const startLogout = () => {\r\n    return async (dispatch) => {\r\n        await firebase.auth().signOut()\r\n\r\n        dispatch(logout())\r\n        dispatch(cleanTimeline())\r\n    }\r\n}\r\n\r\nexport const login = (uid, userName, displayName, photoURL) => {\r\n    return {\r\n        type: types.login,\r\n        payload: {\r\n            uid,\r\n            userName,\r\n            displayName,\r\n            photoURL\r\n        }\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    return {\r\n        type: types.logout\r\n    }\r\n}","import React from 'react'\r\nimport {  Route, Redirect } from 'react-router-dom'\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const PublicRouter = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            component={ (props) => \r\n                ( isAuthenticated )\r\n                ? ( <Redirect to='/' /> )\r\n                : ( <Component {...props} /> )\r\n            }\r\n        />\r\n    )\r\n}\r\n\r\nPublicRouter.prototype = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\nimport {  Route, Redirect } from 'react-router-dom'\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const PrivateRouter = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            component={ (props) => \r\n                ( isAuthenticated )\r\n                ? ( <Component {...props} /> )\r\n                : ( <Redirect to='/login' /> )\r\n            }\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRouter.prototype = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React from 'react'\r\n\r\nexport const LogoComponent = () => {\r\n    return (\r\n        <div className='logo-container'> \r\n            <i className=\"fab fa-twitter\"></i>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { StartLoginWithGithub, StartLoginWithGoogle } from '../../actions/auth'\r\nimport { LogoComponent } from '../Navbar/LogoComponent'\r\n\r\nimport './styles.css'\r\n\r\nexport const LoginComponent = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const handleInputLoginWithGithub = () => {\r\n        dispatch( StartLoginWithGithub() )\r\n    }\r\n\r\n    const handleInputLoginWithGoogle = () => {\r\n        dispatch( StartLoginWithGoogle() )\r\n    }\r\n\r\n    return (\r\n        <div className='login'>\r\n            <div className='LeftSide'>\r\n                <i className=\"fab fa-twitter logoBackground\"></i>\r\n                <div>   \r\n                    <div className='text-item'>\r\n                        <i className=\"fas fa-search\"></i>\r\n                        <span> Sigue lo que te interesa. </span>\r\n                    </div>\r\n                    \r\n                    <div className='text-item'>\r\n                        <i className=\"fas fa-user-friends\"></i>\r\n                        <span> Entérate de qué está hablando la gente. </span>\r\n                    </div>\r\n\r\n                    <div className='text-item'>\r\n                        <i className=\"fas fa-comments\"></i>\r\n                        <span> Únete a la conversación. </span>\r\n                    </div>\r\n                    \r\n                </div>\r\n            </div>\r\n\r\n            <div className='RightSide'>\r\n                <div className='Header'>\r\n                    <div className='logo'>\r\n                        <LogoComponent />\r\n                    </div>\r\n                    <h1>Mira lo que está pasando en el mundo en este momento</h1>\r\n                </div>\r\n\r\n                <div className='social-networks'>\r\n                    <p> <b>Login with:</b></p>\r\n                    \r\n                    <div \r\n                        className=\"btn-login github\" \r\n                        role=\"button\" \r\n                        alt='github icon'\r\n                        name='btn-github'\r\n                        onClick={handleInputLoginWithGithub}\r\n                    >\r\n\r\n                        <div className=\"icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/9/91/Octicons-mark-github.svg/1024px-Octicons-mark-github.svg.png\" alt=\"github icon\" />\r\n                        </div>\r\n\r\n                        <p className=\"btn-text\">\r\n                            <b>Sign in with Github</b>\r\n                        </p>\r\n                    </div>\r\n\r\n                    <div  \r\n                        className=\"btn-login linkedin\" \r\n                        role=\"button\" \r\n                        alt='linkedin icon'\r\n                        name='btn-github'\r\n                        onClick={handleInputLoginWithGoogle}\r\n                    >\r\n                        <div className=\"icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/5/53/Google_%22G%22_Logo.svg/1200px-Google_%22G%22_Logo.svg.png\" alt=\"linkedin icon\" />\r\n                        </div>\r\n\r\n                        <p className=\"btn-text\">\r\n                            <b>Sign in with Google</b>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nexport const ExplorerComponent = () => {\r\n\r\n    const history = useHistory()\r\n\r\n    const [valueSearch, setValueSearch] = useState('')\r\n\r\n    const handleInputChange = (e) => {\r\n        setValueSearch(e.target.value)\r\n    }\r\n\r\n    const handleInputSearch = (e) => {\r\n        e.preventDefault()\r\n\r\n        history.push(`/${valueSearch}`)\r\n    }\r\n\r\n    return (\r\n        <div className='Explorer'>\r\n            <form onSubmit={handleInputSearch}>\r\n                <div className='searchbar'>\r\n                <input \r\n                    name='search'\r\n                    placeholder='Buscar en Twitter' \r\n                    value={valueSearch}\r\n                    onChange={handleInputChange}\r\n                />\r\n                </div>\r\n            </form>\r\n        </div> \r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nexport const InfoUserComponent = () => {\r\n    \r\n    const { UserData } = useSelector(state => state.authReducer)\r\n\r\n    return (\r\n        <div className='UserInfo'>\r\n            <div className='UserPhoto'>\r\n                <img src={ UserData.PhotoURL } alt='User foto'/>\r\n            </div>\r\n\r\n            <div className='UserData'>\r\n                <p className='UserName'>{ UserData.DisplayName }</p>\r\n                <p className='UserID'>@{ UserData.UserName }</p>\r\n            </div>\r\n\r\n            <div className='UserMoreOption'>\r\n                <i className=\"fas fa-chevron-circle-down\"></i>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { startLogout } from '../../actions/auth'\r\n\r\nexport const MenuComponent = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const {UserData} = useSelector(state => state.authReducer)\r\n\r\n    const logout = () => {\r\n        dispatch(startLogout())\r\n    }\r\n\r\n    const activeItemMenu = {\r\n        color: \"rgb(29, 161, 242)\"\r\n      }\r\n\r\n    return (\r\n        <div className='menu-container'>\r\n\r\n            <NavLink \r\n                exact to={'/'} \r\n                activeStyle= {activeItemMenu}\r\n            >\r\n                <div className='menu-item'>\r\n                    <span><i className=\"fas fa-home\"></i> Inicio </span>\r\n                </div>\r\n            </NavLink>\r\n\r\n            <div className='menu-item'>\r\n                <span><i className=\"far fa-envelope\"></i> Mensajes </span>\r\n            </div>\r\n\r\n            <div className='menu-item'>\r\n                <span><i className=\"far fa-bookmark\"></i> Guardados </span>\r\n            </div>\r\n\r\n            <NavLink to={`${UserData.UserName}`} activeStyle={activeItemMenu}>\r\n                <div className='menu-item'>\r\n                    <span><i className=\"far fa-user\"></i> Perfil </span>\r\n                </div>\r\n            </NavLink>\r\n\r\n            <div className='menu-item' role='button' alt='more option botton' onClick={logout}>\r\n                <span><i className=\"fas fa-sign-out-alt flip\"></i> Logout </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { InfoUserComponent } from './InfoUserComponent'\r\nimport { LogoComponent } from './LogoComponent'\r\nimport { MenuComponent } from './MenuComponent'\r\n\r\nexport const NavbarComponent = () => {\r\n\r\n    console.log('true')\r\n\r\n    const handleInput = async () => {\r\n\r\n    }\r\n\r\n    return (\r\n        <div className='Navbar'>\r\n            <LogoComponent />\r\n\r\n            <MenuComponent />\r\n\r\n            <div className='button-tuit' onClick={handleInput}> \r\n                <span className='btn-primary'>Twittear</span> \r\n            </div>\r\n\r\n            <InfoUserComponent />\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { CreateNewTweet } from '../../actions/tweet'\r\nimport './style.css'\r\n\r\nexport const WriteTweetsComponent = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const { UserData } = useSelector(state => state.authReducer)\r\n    const [valueTextArea, setValueTextArea] = useState('')\r\n\r\n    const InputTextareaChage = (e) => {       \r\n        setValueTextArea(e.target.value)\r\n    }\r\n\r\n    const handleInputSubmit = () => {\r\n        dispatch( CreateNewTweet(UserData.UID, UserData.UserName, UserData.DisplayName, UserData.PhotoURL, '', valueTextArea) )\r\n\r\n        setValueTextArea('')\r\n    }\r\n\r\n    return (\r\n        <div className='tweet-container'>\r\n            <div className='tweet-input'>\r\n                <div className='TweetInputPhoto'>\r\n                    <img src={ UserData.PhotoURL } type='text' alt='User foto'/>\r\n                </div>\r\n\r\n                <textarea \r\n                    type='text' \r\n                    name='textareatweet'\r\n                    placeholder='¿Qué está pasando?'\r\n                    value={valueTextArea}\r\n                    onChange={InputTextareaChage}\r\n                    />\r\n            </div>\r\n\r\n            <div className='tweet-buttons'>\r\n                <div className='tweet-btn' type='button' onClick={handleInputSubmit}>\r\n                    <span>Twittear</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const HeaderTimelineComponent = () => {\r\n    return (\r\n        <div className='HeaderTimeline'>\r\n            <h3> Tweets más recientes </h3>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const TimelineListItem = ( {tweet} ) => {\r\n    return (\r\n        <div className='Tweet-wrapper'>\r\n\r\n            <div className='TweetContainer'>\r\n                <div className='TweetPhoto'>\r\n                    <Link to={`/${tweet.userName}`}>\r\n                    <img src={tweet.photoUserURL} alt='User foto'/>\r\n                    </Link>\r\n                </div>\r\n\r\n                <div className='TweetData'>\r\n                    <div className='TweetInfoUser'>\r\n                        <p className='UserName'>{tweet.userDisplayName}</p>\r\n                        <p className='UserID'>@{tweet.userName}</p>\r\n                    </div>\r\n                    <p>{tweet.textBody}</p>\r\n                </div>\r\n\r\n                <div className='TweetMoreOption'>\r\n                    <i className=\"fas fa-ellipsis-h\"></i>\r\n                </div>\r\n            </div>\r\n\r\n            {\r\n                (tweet.photoURL) && \r\n                (<div className='TweetImage'>\r\n                    <img src={tweet.photoURL} alt='User foto'/>\r\n                </div>)\r\n            }\r\n\r\n            <div className='SocialMedia'>\r\n                <i className=\"far fa-comment TweetMedia Comment\"></i>\r\n                <i className=\"fas fa-retweet TweetMedia Retweet\"></i>\r\n                <i className=\"far fa-heart TweetMedia Like\"></i>\r\n                <i className=\"far fa-share-square TweetMedia Share\"></i>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { TimelineListItem } from './TimelineListItem'\r\n\r\nexport const TimelineList = () => {\r\n\r\n    const { timeline } = useSelector(state => state.tweetReducer)\r\n    \r\n    return (\r\n        <div className='TimelineList'>\r\n            {\r\n                timeline.map((tweet, key) => {\r\n                    return <TimelineListItem key={key} tweet={tweet} />\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { WriteTweetsComponent } from '../Tweets/WriteTweetsComponent'\r\nimport { HeaderTimelineComponent } from './HeaderTimelineComponent'\r\nimport { TimelineList } from './TimelineList'\r\n\r\nexport const TimelineComponent = () => {\r\n    return (\r\n        <div className='Timeline'>\r\n            <HeaderTimelineComponent />\r\n\r\n            <WriteTweetsComponent />\r\n\r\n            <hr />\r\n\r\n            <TimelineList />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nexport const HeaderUser = ({ user}) => {\r\n\r\n    const history = useHistory()\r\n\r\n    const handleInputBack = () => {\r\n        if (history.lenth <= 2){\r\n            history.push()\r\n        }\r\n        else {\r\n            history.goBack()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='UserHeader'>\r\n            <div role='button' onClick={handleInputBack}>\r\n                <i className=\"fas fa-arrow-left\"></i>\r\n            </div>\r\n\r\n            {\r\n                (user)&&(\r\n                    <div>\r\n                        <p> {user.DisplayName}</p>\r\n                        <p className='subtitle'> {user.Likes} tweets </p>\r\n                    </div>\r\n                )\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { GetTweetlistFromUser } from '../../helpers/UploadTweetToDB'\r\nimport { TimelineListItem } from '../Timeline/TimelineListItem'\r\n\r\nexport const TweetsList = ({UserDataUID, CollectionFromDB}) => {\r\n\r\n    const [tweetlist, setTweetlist] = useState({tweets: [], isLoading:true})\r\n    const { tweets, isLoading } = tweetlist\r\n\r\n    useEffect(() => {\r\n        GetTweetlistFromUser( UserDataUID, CollectionFromDB, setTweetlist )\r\n    }, [UserDataUID, CollectionFromDB ])\r\n    \r\n    if(isLoading) {\r\n        return <>\r\n        </>\r\n    }\r\n\r\n    return (\r\n        <div className='TimelineList'>\r\n            {\r\n                tweets.forEach( (tweet) => {\r\n                    return <TimelineListItem tweet={tweet} />\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const ButtonFollower = ({styleBtn, handleInputFollow}) => {\r\n    return (\r\n        <div>\r\n            <div className={styleBtn} role='button' onClick={handleInputFollow}>\r\n                <span></span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\nimport { HeaderUser } from './HeaderUser'\r\nimport { TweetsList } from './TweetsList'\r\nimport { database } from \"../../firebase/config\"\r\nimport { useSelector } from 'react-redux'\r\nimport { FollowUser } from '../../helpers/DBListeners'\r\nimport { ButtonFollower } from './ButtonFollower'\r\n\r\nexport const UserComponent = () => {\r\n\r\n    const [user, setUser] = useState({})\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const { UserData } = useSelector(state => state.authReducer)\r\n    const location = useLocation()\r\n    const UserName = location.pathname.split('/')[1]\r\n    \r\n    useEffect(() => {\r\n        database.ref('users').orderByChild('userName').equalTo(UserName).on(\"value\", function(snapshot) {\r\n            snapshot.forEach(function(data) {\r\n                const userData = data.val()\r\n                setUser({\r\n                    UserUID: data.key,\r\n                    DisplayName : userData.displayName,\r\n                    UserName : userData.userName,\r\n                    PhotoURL : userData.photoURL,\r\n                    Likes : userData.likes,\r\n                    Tweets:  userData.tweets,\r\n                    Description: userData.description\r\n                })\r\n                setIsLoading(false)\r\n            });\r\n        });\r\n    }, [UserName])\r\n\r\n    const handleInputFollow = () => {\r\n        FollowUser( UserData.UID, user.UserUID )\r\n    }\r\n\r\n    const handleInputUnfollow = () => {\r\n        //FollowUser( UserData.UID, user.UserUID )\r\n    }\r\n\r\n    if(isLoading){\r\n        return <>\r\n        </>\r\n    }\r\n\r\n    if(!user){\r\n        return <div className='Timeline'>\r\n            <HeaderUser  user={undefined} />\r\n            <div className='ErrorSearch'>\r\n                <h1> Usuario no encontrado :( </h1>\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n    return (\r\n        <div className='Timeline'>\r\n            <HeaderUser user={user}/>\r\n\r\n            <div className='header_photo'>\r\n                <div className='User'>\r\n                    <img src={user.PhotoURL} alt='user' />\r\n                </div>\r\n            </div>\r\n\r\n            <div className='UserText'>\r\n                <div className='UserOption'>\r\n                    <div className='Info' >\r\n                        <h2 className='DisplayName'>{user.DisplayName}</h2>\r\n                        <p className='NameID'>@{user.UserName}</p>\r\n                    </div>\r\n\r\n                    {\r\n                        ( UserData.UID !== user.UserUID ) ?\r\n                        <ButtonFollower styleBtn={'Follow-btn'} handleInputFollow={handleInputFollow} />\r\n                        : \r\n                        <ButtonFollower styleBtn={'Unfollow-btn'} handleInputFollow={handleInputUnfollow} />\r\n                    }\r\n                </div>\r\n\r\n                <p className='description'>{user.Description}</p>\r\n            </div>\r\n\r\n            <div className='TweetBarHeader'>\r\n                <h3> Tweets </h3>\r\n            </div>\r\n\r\n            <TweetsList UserDataUID={user.UserUID} CollectionFromDB={'Tweets'} />\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { \r\n    BrowserRouter as Router, \r\n    Route, \r\n    Switch \r\n} from 'react-router-dom';\r\nimport { TimelineComponent } from './Timeline/TimelineComponent';\r\nimport { UserComponent } from './User/UserComponent';\r\n\r\nexport const TwitterAppRouter = () => {\r\n    return (\r\n        <Router>\r\n            <div className='Timeline'>\r\n                <Switch>\r\n                    <Route path='/:userID' component={ UserComponent }/>\r\n                    <Route exact path=\"/\" component={ TimelineComponent } />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import React from 'react';\nimport { ExplorerComponent } from './Explorer/ExplorerComponent';\nimport { NavbarComponent } from './Navbar/NavbarComponent';\nimport { TwitterAppRouter } from './TwitterAppRouter';\n\nexport const TwitterApp = () => {\n  return (\n    <div className='main-wrapper'>\n      <div className='container'>\n\n        <NavbarComponent />\n        \n        <TwitterAppRouter />\n\n        <ExplorerComponent />\n\n      </div>\n    </div>\n  )\n}","import React from 'react'\r\nimport { \r\n    BrowserRouter as Router,\r\n    Redirect,\r\n    Switch \r\n} from 'react-router-dom'\r\nimport { PublicRouter } from './PublicRouter'\r\nimport { PrivateRouter } from './PrivateRouter'\r\nimport { LoginComponent } from '../components/Login/LoginComponent'\r\nimport { TwitterApp } from '../components/TwitterApp'\r\n\r\nexport const ContainerRouter = ({isLoggedIn}) => {\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRouter \r\n                        path='/login'\r\n                        isAuthenticated={isLoggedIn}\r\n                        component={LoginComponent}\r\n                    />\r\n\r\n                    <PrivateRouter \r\n                        path='/'\r\n                        isAuthenticated={isLoggedIn}\r\n                        component={TwitterApp}\r\n                    />\r\n\r\n                    <Redirect to='login' />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { firebase } from '../firebase/config'\r\nimport { useDispatch } from 'react-redux';\r\nimport { login } from '../actions/auth'\r\nimport { ContainerRouter } from './ContainerRouter';\r\nimport { GetTimeline } from '../helpers/DBListeners';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const [checkingDBLogin, setCheckingDBLogin] = useState(true)\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false)\r\n\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged((user) => {\r\n            if(user?.uid){\r\n                const userName = user.email.split('@')[0]\r\n                dispatch( login( user.uid, userName, user.displayName, user.photoURL ) )\r\n                GetTimeline( user.uid, dispatch)\r\n                setIsLoggedIn(true)\r\n            }\r\n            else{\r\n                setIsLoggedIn(false)\r\n            }\r\n\r\n            setCheckingDBLogin(false)\r\n        })\r\n    }, [dispatch])\r\n\r\n    if(checkingDBLogin){\r\n        return (\r\n            <>\r\n            </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ContainerRouter isLoggedIn={isLoggedIn} />\r\n        </>\r\n    )\r\n}","import { types } from \"../types\";\r\n\r\nconst initialState = {\r\n\r\n}\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.login:\r\n            return {\r\n                UserData: {\r\n                    UID: action.payload.uid,\r\n                    UserName: action.payload.userName,\r\n                    DisplayName: action.payload.displayName,\r\n                    PhotoURL: action.payload.photoURL\r\n                }\r\n            }\r\n\r\n        case types.logout:\r\n           return {}\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types\";\r\n\r\nconst initialState = {\r\n    timeline: []\r\n}\r\n\r\nexport const tweetReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case(types.createTweet): \r\n            return {\r\n                timeline: [action.payload, ...state.timeline]\r\n            }\r\n        case types.loadTimeline:\r\n            return {\r\n                timeline: action.payload\r\n            }\r\n        case types.cleanTimeline: \r\n            return {\r\n                timeline: []\r\n            }\r\n\r\n        case types.addTweetsToTimeline: \r\n            return {\r\n                timeline: action.payload\r\n            }\r\n\r\n        case types.addTweet:\r\n            if(state.timeline.find(tweet => tweet.tweetUID !== action.payload.tweetUID)){\r\n                return {\r\n                    timeline: [ action.payload, ...state.timeline]\r\n                }\r\n            } else if(state.timeline.length < 1) {\r\n                return {\r\n                    timeline: [ action.payload, ...state.timeline]\r\n                }\r\n            }else {\r\n                return state;\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport thunk from 'redux-thunk';\r\nimport { authReducer } from \"../reducers/authReducer\";\r\nimport { tweetReducer } from \"../reducers/tweetReducer\";\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst reducers = combineReducers({\r\n    authReducer,\r\n    tweetReducer\r\n})\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { AppRouter } from './routers/AppRouter';\nimport { store } from './store/store';\n\nimport './styles/styles.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <AppRouter />\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}